
//antes

export const cadastraUsuario = ({ nome, email, senha }) => {
    // Como a função é sincrona, devemos usar um dispatch para que esse pedaço de codigo 
    // seja executado somente apos o retorno do cadastro.
    // Obs nao esqueca da applyMiddleware(ReduxThunk) no cadastro da createStore
    return dispatch => {
        firebase.auth().createUserWithEmailAndPassword(email, senha)
        .then(user => cadastroUsuarioSucesso(dispatch))
        .catch(erro => cadastroUsuarioErro(erro, dispatch));
    }
    
}



// depois

import b64 from 'base-64';

export const cadastraUsuario = ({ nome, email, senha }) => {
    // Como a fun��o � sincrona, devemos usar um dispatch para que esse peda�o de codigo 
    // seja executado somente apos o retorno do cadastro.
    // Obs nao esqueca da applyMiddleware(ReduxThunk) no cadastro da createStore
    return dispatch => {
        firebase.auth().createUserWithEmailAndPassword(email, senha)
            .then(user => {
                let emailB64 = b64.encode(email);
                
                firebase.database().ref('/contatos/'+emailB64)
                    .push({ nome })
                    .then(value => cadastroUsuarioSucesso(dispatch))   
            })
            .catch(erro => cadastroUsuarioErro(erro, dispatch));
    }
    
}